{"version":3,"sources":["webpack:///./src/components/VideoBackground.js","webpack:///./src/components/Button.js","webpack:///./src/components/Display.js","webpack:///./src/components/TotalTimer.js","webpack:///./src/components/ModeSelector.js","webpack:///./src/components/InstructionsModal.js","webpack:///./src/pages/index.js","webpack:///./src/assets/Particle_background1.mp4"],"names":["autoPlay","loop","className","src","BackgroundVideo","type","Button","timerRunning","handleClick","label","show","onClick","active","notActive","defaultProps","Display","render","style","visibility","this","props","position","zIndex","top","right","bottom","left","marginLeft","marginRight","backgroundColor","opacity","animation","selector","React","Component","TotalTimer","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","time","hours","minutes","seconds","ModeSelector","handleChange","bind","event","chooseMode","target","value","htmlFor","name","id","onChange","mode","InstructionsModal","getCompleteContent","complete","title","subtitle","copy","IndexPage","toggleTimer","current","state","setState","data","currentMode","resetTimer","VideoBackground","ref","Date","getFullYear","href","module","exports"],"mappings":"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","file":"component---src-pages-index-js-0c5f04d95d62f39fb060.js","sourcesContent":["import React from \"react\"\nimport BackgroundVideo from \"../assets/Particle_background1.mp4\"\n\nexport default () => {\n  return (\n    <video autoPlay loop className=\"video-background\">\n      <source src={BackgroundVideo} type=\"video/mp4\" />\n    </video>\n  )\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Button = ({ timerRunning, handleClick, label, show }) => (\n  <button onClick={handleClick} className={show ? 'hidden button' : 'button'} >\n    {timerRunning ? label.active: label.notActive}\n  </button>\n)\n\nButton.propTypes = {\n  timerRunning: PropTypes.bool,\n  handleClick: PropTypes.func,\n}\n\nButton.defaultProps = {\n  timerRunning: false\n}\n\nexport default Button","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class Display extends React.Component {    \n  render() {\n    return(\n      <>\n      <div className='display-backdrop' style={{\n        visibility: `${this.props.show}`,\n      }}></div>\n      <div\n      style={{\n        position: 'absolute',\n        zIndex: '-10',\n        top: '20px',\n        right: '20px',\n        bottom: '20px',\n        left: '20px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: 'silver',\n        opacity: '0.5',\n        visibility: `${this.props.show}`,\n        animation: `${this.props.selector}`,\n      }}\n      >        \n      </div>\n      </>\n    )\n  }\n}\n\nDisplay.propTypes = {\n  selector: PropTypes.string\n}\n\nDisplay.defaultProps = {  \n  selector: ''\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class TotalTimer extends React.Component {    \n\tcomponentDidMount() {\n    this.timerID = setInterval(() => this.props.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID)\n  }\n  \n\trender() {\n    return (\n      <div className='total-timer'>\n        {this.props.time.hours}:\n        {this.props.time.minutes<10 ? '0' + this.props.time.minutes : this.props.time.minutes }:\n        {this.props.time.seconds<10 ? '0' + this.props.time.seconds : this.props.time.seconds }\n\t\t  </div>\n\t  );\n\t}\n}\n\nTotalTimer.propTypes = {\n  timerRunning: PropTypes.bool,\n  time: PropTypes.object,\n  tick: PropTypes.func,\n}\n\nTotalTimer.defaultProps = {\n  timerRunning: false,\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class ModeSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.props.chooseMode(event.target.value)\n  }\n  componentDidMount() {\n    this.props.chooseMode('complete')\n  }\n  render() {\n    return (\n      <div className={'mode-selector ' + (this.props.show ? 'hidden' : '' )}>\n        <form>\n          <label htmlFor=\"breath-select\">Pattern:</label>\n        <select  name=\"breath\" id=\"breath-select\" onChange={this.handleChange}>\n          <option value=\"complete\">Complete Breath</option>\n          <option value=\"oneMin\">1 Minute Breath</option>\n        </select>\n        </form>\n      </div>\n    )\n  }\n}\n\nModeSelector.propTypes = {\n  mode: PropTypes.string,\n  show: PropTypes.bool\n}\n\nModeSelector.defaultProps = {\n  mode: 'complete',\n  show: false\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class InstructionsModal extends React.Component {\n  getCompleteContent(mode) {\n    const complete = {\n      title: 'The Complete Breath',\n      subtitle: 'The fundamental basic breathing pattern',\n      copy: 'Inhale for 4 seconds, hold for 2, and exhale over 6 seconds'\n    }\n    const oneMin = {\n      title: 'The One Minute Breath',\n      subtitle: 'One breath per minute, 20 seconds per part',\n      copy: 'Inhale for 20 seconds, hold for 20, exhale for 20'\n    }\n\n    return mode === 'complete' ? complete : mode === 'oneMin' ? oneMin : complete\n  };\n\n  render() {\n    return(\n      <div className={'instructions-modal ' + (this.props.show ? 'hidden' : '' )} >\n        <div className=\"text__title\">\n          {this.getCompleteContent(this.props.mode).title}\n          {this.props.timerRunning}\n        </div>\n        <div className=\"text__subtitle\">\n          {this.getCompleteContent(this.props.mode).subtitle}\n        </div>\n        <div className=\"text__copy\">\n          {this.getCompleteContent(this.props.mode).copy}\n        </div>\n      </div>\n    )\n  }\n}\n\nInstructionsModal.propTypes = {\n  mode: PropTypes.string,\n  show: PropTypes.bool\n}\n\nInstructionsModal.defaultProps = {\n  mode: 'complete',\n  show: false\n}","import React from \"react\"\n\nimport VideoBackground from \"../components/VideoBackground.js\"\nimport Button from \"../components/Button.js\"\nimport Display from \"../components/Display.js\"\nimport TotalTimer from \"../components/TotalTimer.js\"\nimport ModeSelector from \"../components/ModeSelector.js\"\nimport InstructionsModal from \"../components/InstructionsModal.js\"\n\nexport default class IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n\t  this.state = {\n      currentMode: '',\n      timerRunning: false,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    this.tick = this.tick.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n  \n  toggleTimer = () => {\n    let current = this.state.timerRunning;\n    this.setState({timerRunning: !current});\n  }\n\n  tick() {\n    if (this.state.timerRunning) {\n      this.state.seconds < 59 ? this.setState({seconds: this.state.seconds +1}) : \n      this.state.minutes < 59 ? this.setState({minutes: this.state.minutes +1, seconds: 0}) : \n      this.setState({hours: this.state.hours +1, minutes: 0, seconds: 0})\n    }\n  }\n\n  resetTimer() { this.setState({hours: 0, minutes: 0, seconds: 0}) }\n\n  chooseMode = (data) => { this.setState({currentMode: data}) }\n  \n  selector = () => {\n    let current = this.state.currentMode\n    if (current === 'complete' && this.state.timerRunning) {\n      return `${current} 12s ease-in-out infinite`\n    } else if (current === 'oneMin' && this.state.timerRunning) {\n      return `${current} 60s linear infinite`\n    } else if (current === 'oneMinInc' && this.state.timerRunning) {\n      return `${current} 60s linear infinite`\n    } else return ''\n  }\n  \n  render() {\n    return (\n      <> \n      <VideoBackground />\n      <div className=\"content-wrap\" ref=\"inner\">\n        <TotalTimer timerRunning={this.state.timerRunning} time={{hours:this.state.hours, minutes:this.state.minutes, seconds:this.state.seconds}} tick={this.tick} />\n        <InstructionsModal show={this.state.timerRunning} mode={this.state.currentMode} />\n        <div className=\"button-wrap\">\n          <Button handleClick={this.toggleTimer} timerRunning={this.state.timerRunning} label={{active: 'Stop', notActive: 'Start'}} />\n          <Button handleClick={this.resetTimer} show={this.state.timerRunning} timerRunning={this.state.timerRunning} label={{active: 'Reset timer', notActive: 'Reset timer'}}/>\n        </div>\n        <ModeSelector show={this.state.timerRunning} chooseMode={this.chooseMode} />\n        <Display show={this.state.timerRunning ? 'visible' : 'hidden'} selector={this.selector()} />\n      </div>\n      <footer >\n        © {new Date().getFullYear()}, Built with {\" \"} <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n      </>\n    )\n  }\n}","module.exports = __webpack_public_path__ + \"static/Particle_background1-d463facce579965ea857873131f916b3.mp4\";"],"sourceRoot":""}