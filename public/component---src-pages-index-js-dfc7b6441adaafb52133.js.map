{"version":3,"sources":["webpack:///./src/assets/Distant_Lights_4K_Motion_Background_Loop.mp4","webpack:///./src/components/VideoBackground.js","webpack:///./src/components/Button.js","webpack:///./src/components/Display.js","webpack:///./src/components/TotalTimer.js","webpack:///./src/components/ModeSelector.js","webpack:///./src/components/InstructionsModal.js","webpack:///./src/components/Seo.js","webpack:///./src/pages/index.js"],"names":["module","exports","autoPlay","loop","className","src","BackgroundVideo","type","Button","timerRunning","handleClick","label","show","onClick","active","notActive","defaultProps","Display","render","style","visibility","this","props","position","zIndex","top","right","bottom","left","marginLeft","marginRight","backgroundColor","opacity","animation","selector","React","Component","TotalTimer","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","time","hours","minutes","seconds","ModeSelector","handleChange","bind","event","chooseMode","target","value","htmlFor","name","id","onChange","mode","InstructionsModal","getCompleteContent","complete","title","subtitle","copy","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","content","property","author","concat","IndexPage","toggleTimer","current","state","setState","data","currentMode","resetTimer","VideoBackground","ref","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-index-js-dfc7b6441adaafb52133.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/Distant_Lights_4K_Motion_Background_Loop-f7155d314f0fd39e8065a82c2b21ccbb.mp4\";","import React from \"react\"\nimport BackgroundVideo from \"../assets/Distant_Lights_4K_Motion_Background_Loop.mp4\"\n\nexport default () => {\n  return (\n    <video autoPlay loop className=\"video-background\">\n      <source src={BackgroundVideo} type=\"video/mp4\" />\n    </video>\n  )\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Button = ({ timerRunning, handleClick, label, show }) => (\n  <button onClick={handleClick} className={show ? 'hidden button' : 'button'} >\n    {timerRunning ? label.active: label.notActive}\n  </button>\n)\n\nButton.propTypes = {\n  timerRunning: PropTypes.bool,\n  handleClick: PropTypes.func,\n}\n\nButton.defaultProps = {\n  timerRunning: false\n}\n\nexport default Button","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class Display extends React.Component {    \n  render() {\n    return(\n      <>\n      <div className='display-backdrop' style={{\n        visibility: `${this.props.show}`,\n      }}></div>\n      <div\n      style={{\n        position: 'absolute',\n        zIndex: '-10',\n        top: '20px',\n        right: '20px',\n        bottom: '20px',\n        left: '20px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: 'silver',\n        opacity: '0.5',\n        visibility: `${this.props.show}`,\n        animation: `${this.props.selector}`,\n      }}\n      >        \n      </div>\n      </>\n    )\n  }\n}\n\nDisplay.propTypes = {\n  selector: PropTypes.string\n}\n\nDisplay.defaultProps = {  \n  selector: ''\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class TotalTimer extends React.Component {    \n\tcomponentDidMount() {\n    this.timerID = setInterval(() => this.props.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID)\n  }\n  \n\trender() {\n    return (\n      <div className='total-timer'>\n        {this.props.time.hours}:\n        {this.props.time.minutes<10 ? '0' + this.props.time.minutes : this.props.time.minutes }:\n        {this.props.time.seconds<10 ? '0' + this.props.time.seconds : this.props.time.seconds }\n\t\t  </div>\n\t  );\n\t}\n}\n\nTotalTimer.propTypes = {\n  timerRunning: PropTypes.bool,\n  time: PropTypes.object,\n  tick: PropTypes.func,\n}\n\nTotalTimer.defaultProps = {\n  timerRunning: false,\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class ModeSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.props.chooseMode(event.target.value)\n  }\n  componentDidMount() {\n    this.props.chooseMode('complete')\n  }\n  render() {\n    return (\n      <div className={'mode-selector ' + (this.props.show ? 'hidden' : '' )}>\n        <form>\n          <label htmlFor=\"breath-select\">Pattern:</label>\n        <select  name=\"breath\" id=\"breath-select\" onChange={this.handleChange}>\n          <option value=\"complete\">Complete Breath</option>\n          <option value=\"oneMin\">1 Minute Breath</option>\n        </select>\n        </form>\n      </div>\n    )\n  }\n}\n\nModeSelector.propTypes = {\n  mode: PropTypes.string,\n  show: PropTypes.bool\n}\n\nModeSelector.defaultProps = {\n  mode: 'complete',\n  show: false\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class InstructionsModal extends React.Component {\n  getCompleteContent(mode) {\n    const complete = {\n      title: 'The Complete Breath',\n      subtitle: 'The fundamental basic breathing pattern',\n      copy: 'Inhale for 4 seconds, hold for 2, and exhale over 6 seconds'\n    }\n    const oneMin = {\n      title: 'The One Minute Breath',\n      subtitle: 'One breath per minute, 20 seconds per part',\n      copy: 'Inhale for 20 seconds, hold for 20, exhale for 20'\n    }\n\n    return mode === 'complete' ? complete : mode === 'oneMin' ? oneMin : complete\n  };\n\n  render() {\n    return(\n      <div className={'instructions-modal ' + (this.props.show ? 'hidden' : '' )} >\n        <div className=\"text__title\">\n          {this.getCompleteContent(this.props.mode).title}\n          {this.props.timerRunning}\n        </div>\n        <div className=\"text__subtitle\">\n          {this.getCompleteContent(this.props.mode).subtitle}\n        </div>\n        <div className=\"text__copy\">\n          {this.getCompleteContent(this.props.mode).copy}\n        </div>\n      </div>\n    )\n  }\n}\n\nInstructionsModal.propTypes = {\n  mode: PropTypes.string,\n  show: PropTypes.bool\n}\n\nInstructionsModal.defaultProps = {\n  mode: 'complete',\n  show: false\n}","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport VideoBackground from \"../components/VideoBackground.js\"\nimport Button from \"../components/Button.js\"\nimport Display from \"../components/Display.js\"\nimport TotalTimer from \"../components/TotalTimer.js\"\nimport ModeSelector from \"../components/ModeSelector.js\"\nimport InstructionsModal from \"../components/InstructionsModal.js\"\nimport SEO from \"../components/Seo.js\"\n\nexport default class IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n\t  this.state = {\n      currentMode: '',\n      timerRunning: false,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    this.tick = this.tick.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n  \n  toggleTimer = () => {\n    let current = this.state.timerRunning;\n    this.setState({timerRunning: !current});\n  }\n\n  tick() {\n    if (this.state.timerRunning) {\n      this.state.seconds < 59 ? this.setState({seconds: this.state.seconds +1}) : \n      this.state.minutes < 59 ? this.setState({minutes: this.state.minutes +1, seconds: 0}) : \n      this.setState({hours: this.state.hours +1, minutes: 0, seconds: 0})\n    }\n  }\n\n  resetTimer() { this.setState({hours: 0, minutes: 0, seconds: 0}) }\n\n  chooseMode = (data) => { this.setState({currentMode: data}) }\n  \n  selector = () => {\n    let current = this.state.currentMode\n    if (current === 'complete' && this.state.timerRunning) {\n      return `${current} 12s ease-in-out infinite`\n    } else if (current === 'oneMin' && this.state.timerRunning) {\n      return `${current} 60s linear infinite`\n    } else if (current === 'oneMinInc' && this.state.timerRunning) {\n      return `${current} 60s linear infinite`\n    } else return ''\n  }\n  \n  render() {\n    return (\n      <> \n      <VideoBackground />\n      <div className=\"content-wrap\" ref=\"inner\">\n        <SEO title=\"Home\" />\n        <TotalTimer timerRunning={this.state.timerRunning} time={{hours:this.state.hours, minutes:this.state.minutes, seconds:this.state.seconds}} tick={this.tick} />\n        <InstructionsModal show={this.state.timerRunning} mode={this.state.currentMode} />\n        <div className=\"button-wrap\">\n          <Button handleClick={this.toggleTimer} timerRunning={this.state.timerRunning} label={{active: 'Stop', notActive: 'Start'}} />\n          <Button handleClick={this.resetTimer} show={this.state.timerRunning} timerRunning={this.state.timerRunning} label={{active: 'Reset timer', notActive: 'Reset timer'}}/>\n        </div>\n        <ModeSelector show={this.state.timerRunning} chooseMode={this.chooseMode} />\n        <Display show={this.state.timerRunning ? 'visible' : 'hidden'} selector={this.selector()} />\n      </div>\n      <footer >\n        © {new Date().getFullYear()}, Built with {\" \"} <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n      </>\n    )\n  }\n}"],"sourceRoot":""}