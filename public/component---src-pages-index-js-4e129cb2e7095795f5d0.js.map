{"version":3,"sources":["webpack:///./src/assets/Distant_Lights_4K_Motion_Background_Loop.mp4","webpack:///./src/components/VideoBackground.js","webpack:///./src/components/Button.js","webpack:///./src/components/display.js","webpack:///./src/components/totalTimer.js","webpack:///./src/components/modeSelector.js","webpack:///./src/components/instructionsModal.js","webpack:///./src/pages/index.js"],"names":["module","exports","autoPlay","loop","className","src","BackgroundVideo","type","Butto","Display","render","style","visibility","this","props","show","position","zIndex","top","right","bottom","left","marginLeft","marginRight","backgroundColor","opacity","animation","selector","React","Component","defaultProps","TotalTimer","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","time","hours","minutes","seconds","timerRunning","ModeSelector","handleChange","bind","event","chooseMode","target","value","htmlFor","name","id","onChange","mode","InstructionsModal","getCompleteContent","complete","title","subtitle","copy","IndexPage","toggleTimer","current","state","setState","data","currentMode","resetTimer","VideoBackground","ref","handleClick","label","active","notActive","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-index-js-4e129cb2e7095795f5d0.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/Distant_Lights_4K_Motion_Background_Loop-f7155d314f0fd39e8065a82c2b21ccbb.mp4\";","import React from \"react\"\nimport BackgroundVideo from \"../assets/Distant_Lights_4K_Motion_Background_Loop.mp4\"\n\nexport default () => {\n  return (\n    <video autoPlay loop className=\"video-background\">\n      <source src={BackgroundVideo} type=\"video/mp4\" />\n    </video>\n  )\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Button = ({ timerRunning, handleClick, label, show }) => (\n  <button onClick={handleClick} className={show ? 'hidden button' : 'button'} >\n    {timerRunning ? label.active: label.notActive}\n  </button>\n)\n\nButton.propTypes = {\n  timerRunning: PropTypes.bool,\n  handleClick: PropTypes.func,\n}\n\nButton.defaultProps = {\n  timerRunning: false\n}\n\nexport default Butto","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class Display extends React.Component {    \n  render() {\n    return(\n      <>\n      <div className='display-backdrop' style={{\n        visibility: `${this.props.show}`,\n      }}></div>\n      <div\n      style={{\n        position: 'absolute',\n        zIndex: '-10',\n        top: '20px',\n        right: '20px',\n        bottom: '20px',\n        left: '20px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: 'silver',\n        opacity: '0.5',\n        visibility: `${this.props.show}`,\n        animation: `${this.props.selector}`,\n      }}\n      >        \n      </div>\n      </>\n    )\n  }\n}\n\nDisplay.propTypes = {\n  selector: PropTypes.string\n}\n\nDisplay.defaultProps = {  \n  selector: ''\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class TotalTimer extends React.Component {    \n\tcomponentDidMount() {\n    this.timerID = setInterval(() => this.props.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID)\n  }\n  \n\trender() {\n    return (\n      <div className='total-timer'>\n        {this.props.time.hours}:\n        {this.props.time.minutes<10 ? '0' + this.props.time.minutes : this.props.time.minutes }:\n        {this.props.time.seconds<10 ? '0' + this.props.time.seconds : this.props.time.seconds }\n\t\t  </div>\n\t  );\n\t}\n}\n\nTotalTimer.propTypes = {\n  timerRunning: PropTypes.bool,\n  time: PropTypes.object,\n  tick: PropTypes.func,\n}\n\nTotalTimer.defaultProps = {\n  timerRunning: false,\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class ModeSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.props.chooseMode(event.target.value)\n  }\n  componentDidMount() {\n    this.props.chooseMode('complete')\n  }\n  render() {\n    return (\n      <div className={'mode-selector ' + (this.props.show ? 'hidden' : '' )}>\n        <form>\n          <label htmlFor=\"breath-select\">Pattern:</label>\n        <select  name=\"breath\" id=\"breath-select\" onChange={this.handleChange}>\n          <option value=\"complete\">Complete Breath</option>\n          <option value=\"oneMin\">1 Minute Breath</option>\n        </select>\n        </form>\n      </div>\n    )\n  }\n}\n\nModeSelector.propTypes = {\n  mode: PropTypes.string,\n  show: PropTypes.bool\n}\n\nModeSelector.defaultProps = {\n  mode: 'complete',\n  show: false\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nexport default class InstructionsModal extends React.Component {\n  getCompleteContent(mode) {\n    const complete = {\n      title: 'The Complete Breath',\n      subtitle: 'The fundamental basic breathing pattern',\n      copy: 'Inhale for 4 seconds, hold for 2, and exhale over 6 seconds'\n    }\n    const oneMin = {\n      title: 'The One Minute Breath',\n      subtitle: 'One breath per minute, 20 seconds per part',\n      copy: 'Inhale for 20 seconds, hold for 20, exhale for 20'\n    }\n\n    return mode === 'complete' ? complete : mode === 'oneMin' ? oneMin : complete\n  };\n\n  render() {\n    return(\n      <div className={'instructions-modal ' + (this.props.show ? 'hidden' : '' )} >\n        <div className=\"text__title\">\n          {this.getCompleteContent(this.props.mode).title}\n          {this.props.timerRunning}\n        </div>\n        <div className=\"text__subtitle\">\n          {this.getCompleteContent(this.props.mode).subtitle}\n        </div>\n        <div className=\"text__copy\">\n          {this.getCompleteContent(this.props.mode).copy}\n        </div>\n      </div>\n    )\n  }\n}\n\nInstructionsModal.propTypes = {\n  mode: PropTypes.string,\n  show: PropTypes.bool\n}\n\nInstructionsModal.defaultProps = {\n  mode: 'complete',\n  show: false\n}","import React from \"react\"\n\nimport VideoBackground from \"../components/VideoBackground\"\nimport Button from \"../components/Button\"\nimport Display from \"../components/display\"\nimport TotalTimer from \"../components/totalTimer\"\nimport ModeSelector from \"../components/modeSelector\"\nimport InstructionsModal from \"../components/instructionsModal\"\nimport SEO from \"../components/seo\"\n\nexport default class IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n\t  this.state = {\n      currentMode: '',\n      timerRunning: false,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    this.tick = this.tick.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n  \n  toggleTimer = () => {\n    let current = this.state.timerRunning;\n    this.setState({timerRunning: !current});\n  }\n\n  tick() {\n    if (this.state.timerRunning) {\n      this.state.seconds < 59 ? this.setState({seconds: this.state.seconds +1}) : \n      this.state.minutes < 59 ? this.setState({minutes: this.state.minutes +1, seconds: 0}) : \n      this.setState({hours: this.state.hours +1, minutes: 0, seconds: 0})\n    }\n  }\n\n  resetTimer() { this.setState({hours: 0, minutes: 0, seconds: 0}) }\n\n  chooseMode = (data) => { this.setState({currentMode: data}) }\n  \n  selector = () => {\n    let current = this.state.currentMode\n    if (current === 'complete' && this.state.timerRunning) {\n      return `${current} 12s ease-in-out infinite`\n    } else if (current === 'oneMin' && this.state.timerRunning) {\n      return `${current} 60s linear infinite`\n    } else if (current === 'oneMinInc' && this.state.timerRunning) {\n      return `${current} 60s linear infinite`\n    } else return ''\n  }\n  \n  render() {\n    return (\n      <> \n      <VideoBackground />\n      <div className=\"content-wrap\" ref=\"inner\">\n        <SEO title=\"Home\" />\n        <TotalTimer timerRunning={this.state.timerRunning} time={{hours:this.state.hours, minutes:this.state.minutes, seconds:this.state.seconds}} tick={this.tick} />\n        <InstructionsModal show={this.state.timerRunning} mode={this.state.currentMode} />\n        <div className=\"button-wrap\">\n          <Button handleClick={this.toggleTimer} timerRunning={this.state.timerRunning} label={{active: 'Stop', notActive: 'Start'}} />\n          <Button handleClick={this.resetTimer} show={this.state.timerRunning} timerRunning={this.state.timerRunning} label={{active: 'Reset timer', notActive: 'Reset timer'}}/>\n        </div>\n        <ModeSelector show={this.state.timerRunning} chooseMode={this.chooseMode} />\n        <Display show={this.state.timerRunning ? 'visible' : 'hidden'} selector={this.selector()} />\n      </div>\n      <footer >\n        © {new Date().getFullYear()}, Built with {\" \"} <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n      </>\n    )\n  }\n}"],"sourceRoot":""}